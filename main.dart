import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart'; // Import Firebase Auth

import 'package:google_fonts/google_fonts.dart';

// Import your custom screens with clear distinctions
import 'admin_sign_up.dart'; // Contains AdminsignupWidget
import 'admin_login.dart';   // Contains AdminLogin (your dedicated admin login screen)
// import 'onboarding.dart';    // Removed: Onboarding screen is no longer attached
import 'users_login.dart';   // Contains LoginScreen (your dedicated user login screen)

import 'firebase_options.dart'; // Generated by FlutterFire CLI

// The single main function for your application
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Waves Of Food',
      debugShowCheckedModeBanner: false, // Set to false to remove debug banner
      theme: ThemeData(
        primarySwatch: Colors.deepOrange, // A suitable primary color for the app
        scaffoldBackgroundColor: const Color(0xFFFFF8E1), // Light background for most scaffolds
        fontFamily: 'Poppins', // Your preferred font
        appBarTheme: const AppBarTheme(
          backgroundColor: Colors.transparent, // Make AppBar transparent
          elevation: 0, // Remove shadow
          iconTheme: IconThemeData(color: Colors.black), // Dark icons
          titleTextStyle: TextStyle(color: Colors.black, fontSize: 20, fontWeight: FontWeight.bold),
        ),
      ),
      // The initial screen of your application is the SelectionScreen
      home: const SelectionScreen(),
      // Define your named routes here for cleaner navigation
      routes: {
        // '/onboarding': (context) => const OnboardingWidget(), // Removed: Onboarding route is no longer used
        '/userLogin': (context) => const LoginScreen(),     // User Login screen (from users_login.dart)
        '/adminLogin': (context) => const AdminLogin(),     // Admin Login screen (from admin_login.dart)
        '/adminSignup': (context) => const AdminsignupWidget(), // Admin Sign Up screen
      },
    );
  }
}

// --- Selection Screen (Modified to go directly to user login) ---
class SelectionScreen extends StatefulWidget {
  const SelectionScreen({super.key});

  @override
  State<SelectionScreen> createState() => _SelectionScreenState();
}

class _SelectionScreenState extends State<SelectionScreen>
    with SingleTickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _opacityAnimation;
  late Animation<double> _scaleAnimation;
  late Animation<Offset> _userButtonOffset;
  late Animation<Offset> _adminButtonOffset;

  @override
  void initState() {
    super.initState();

    _controller = AnimationController(
      vsync: this,
      duration: const Duration(milliseconds: 1200),
    );

    _opacityAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(
      CurvedAnimation(
        parent: _controller,
        curve: const Interval(0.0, 0.5, curve: Curves.easeInOut),
      ),
    );

    _scaleAnimation = Tween<double>(begin: 0.8, end: 1.0).animate(
      CurvedAnimation(
        parent: _controller,
        curve: const Interval(0.3, 1.0, curve: Curves.elasticOut),
      ),
    );

    _userButtonOffset = Tween<Offset>(
      begin: const Offset(-2, 0),
      end: Offset.zero,
    ).animate(
      CurvedAnimation(
        parent: _controller,
        curve: const Interval(0.4, 0.8, curve: Curves.easeOutBack),
      ),
    );

    _adminButtonOffset = Tween<Offset>(
      begin: const Offset(2, 0),
      end: Offset.zero,
    ).animate(
      CurvedAnimation(
        parent: _controller,
        curve: const Interval(0.5, 0.9, curve: Curves.easeOutBack),
      ),
    );

    _controller.forward();
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;

    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [
              Color(0xFF0F2027), // Darker start
              Color(0xFF203A43), // Mid color
              Color(0xFF2C5364), // Lighter end
            ],
            stops: [0.1, 0.5, 0.9],
          ),
        ),
        child: Stack(
          children: [
            // Animated background elements (unchanged)
            Positioned(
              top: size.height * 0.1,
              left: size.width * 0.2,
              child: ScaleTransition(
                scale: _scaleAnimation,
                child: Container(
                  width: 100,
                  height: 100,
                  decoration: BoxDecoration(
                    shape: BoxShape.circle,
                    color: Colors.white.withOpacity(0.1),
                  ),
                ),
              ),
            ),

            Positioned(
              bottom: size.height * 0.2,
              right: size.width * 0.15,
              child: ScaleTransition(
                scale: _scaleAnimation,
                child: Container(
                  width: 150,
                  height: 150,
                  decoration: BoxDecoration(
                    shape: BoxShape.circle,
                    color: Colors.white.withOpacity(0.05),
                  ),
                ),
              ),
            ),

            // Content
            SafeArea(
              child: Padding(
                padding: const EdgeInsets.all(24.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    FadeTransition(
                      opacity: _opacityAnimation,
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            'Waves of Food',
                            style: GoogleFonts.poppins(
                              fontSize: 32,
                              fontWeight: FontWeight.w800,
                              color: Colors.white,
                              letterSpacing: 1.2,
                            ),
                          ),
                          Text(
                            'Discover culinary excellence',
                            style: GoogleFonts.poppins(
                              fontSize: 16,
                              fontWeight: FontWeight.w300,
                              color: Colors.white.withOpacity(0.8),
                            ),
                          ),
                        ],
                      ),
                    ),

                    const Spacer(),

                    // User Button
                    SlideTransition(
                      position: _userButtonOffset,
                      child: AnimatedButton(
                        label: 'Continue as User',
                        icon: Icons.person_outline,
                        color: const Color(0xFF00C9A7),
                        onPressed: () {
                          // Directly navigate to the user's LoginScreen
                          Navigator.pushNamed(context, '/userLogin');
                        },
                      ),
                    ),

                    const SizedBox(height: 30),

                    // Admin Button
                    SlideTransition(
                      position: _adminButtonOffset,
                      child: AnimatedButton(
                        label: 'Admin Access',
                        icon: Icons.admin_panel_settings_outlined,
                        color: const Color(0xFF845EC2),
                        onPressed: () {
                          // Navigates to the AdminLogin screen via its named route
                          Navigator.pushNamed(context, '/adminLogin');
                        },
                      ),
                    ),

                    const SizedBox(height: 40),

                    FadeTransition(
                      opacity: _opacityAnimation,
                      child: Center(
                        child: Text(
                          'Experience the future of food delivery',
                          style: GoogleFonts.poppins(
                            fontSize: 14,
                            color: Colors.white.withOpacity(0.6),
                            fontStyle: FontStyle.italic,
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// --- Animated Button Component (unchanged) ---
class AnimatedButton extends StatefulWidget {
  final String label;
  final IconData icon;
  final Color color;
  final VoidCallback onPressed;

  const AnimatedButton({
    super.key,
    required this.label,
    required this.icon,
    required this.color,
    required this.onPressed,
  });

  @override
  State<AnimatedButton> createState() => _AnimatedButtonState();
}

class _AnimatedButtonState extends State<AnimatedButton> {
  bool _isHovering = false;

  @override
  Widget build(BuildContext context) {
    return MouseRegion(
      onEnter: (_) => setState(() => _isHovering = true),
      onExit: (_) => setState(() => _isHovering = false),
      child: AnimatedContainer(
        duration: const Duration(milliseconds: 300),
        curve: Curves.easeInOut,
        transform: Matrix4.identity()
          ..scale(_isHovering ? 1.03 : 1.0), // Slight scale on hover
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(16),
          boxShadow: _isHovering
              ? [
            BoxShadow(
              color: widget.color.withOpacity(0.4),
              blurRadius: 20,
              spreadRadius: 2,
              offset: const Offset(0, 5),
            ),
          ]
              : [], // Shadow only on hover
        ),
        child: ElevatedButton(
          style: ElevatedButton.styleFrom(
            backgroundColor: widget.color,
            padding: const EdgeInsets.symmetric(vertical: 20, horizontal: 30),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(16),
            ),
            elevation: 0, // ElevatedButton itself has no shadow as Container handles it
          ),
          onPressed: widget.onPressed,
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Icon(widget.icon, size: 28),
              const SizedBox(width: 15),
              Text(
                widget.label,
                style: GoogleFonts.poppins(
                  fontSize: 18,
                  fontWeight: FontWeight.w600,
                  color: Colors.white,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}